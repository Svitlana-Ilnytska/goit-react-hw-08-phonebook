{"version":3,"file":"static/js/794.2d2cbad5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/HomePage/HomePage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  useCreateContactMutation,\n  useEditContactMutation,\n  useFetchContactsQuery,\n} from \"../../redux/contacts/operations\";\nimport { useAuth } from '../../hooks';\n\nimport {\n  Button,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  useToast,\n} from \"@chakra-ui/core\";\n\nexport default function ContactForm({\n  id,\n  nameItem,\n  numberItem,\n  onCloseModal,\n}) {\n  const [name, setName] = useState(nameItem);\n  const [number, setNumber] = useState(numberItem);\n  const {token} = useAuth();\n\n  const { data: contacts } = useFetchContactsQuery(token);\n  const [createContact] = useCreateContactMutation();\n  const [editContact] = useEditContactMutation();\n  const toast = useToast();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`name - ${name} not matched`);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const contactName = {\n      name: name,\n      number: number,\n    };\n\n    const theSameContact = contacts?.some((contact) =>\n      contact.name.toLowerCase().includes(contactName.name.toLowerCase())\n    );\n\n    if (id) {\n      editContact({ id, contactName, token });\n      onCloseModal();\n      toast({\n        title: \"Contact saved.\",\n        description: \"We've updated your contact.\",\n        status: \"success\",\n        duration: 9000,\n        isClosable: true,\n      });\n    } else if (theSameContact) {\n      toast({\n        title: \"An error occurred.\",\n        description: `${contactName.name} is already in contacts.`,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n    } else {\n      createContact({ contactName, token });\n      toast({\n        title: \"Contact added.\",\n        description: \"We've created your contact.\",\n        status: \"success\",\n        duration: 9000,\n        isClosable: true,\n      });\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <Box my={8} textAlign=\"left\">\n      <form onSubmit={handleSubmit}>\n        <FormControl>\n          <FormLabel>Name </FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Type name\"\n            pattern=\"^[a-zA-Zа-яА-Я\\\\s\\\\'-]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormControl>\n\n        <FormControl mt={4}>\n          <FormLabel> Number</FormLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Type number\"\n            pattern=\"[+]?[0-9]{1,4}[-.\\\\s]?[()0-9]{1,3}[-.\\\\s]?[0-9]{1,4}[-.\\\\s]?[0-9]{1,4}[-.\\\\s]?[0-9]{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormControl>\n        {id ? (\n          <Button\n            variantColor=\"teal\"\n            width=\"45%\"\n            borderWidth={1}\n            mt={4}\n            type=\"submit\"\n          >\n            Save changes\n          </Button>\n        ) : (\n          <Button\n            variantColor=\"teal\"\n            width=\"full\"\n            borderWidth={1}\n            mt={4}\n            type=\"submit\"\n          >\n            Add contact\n          </Button>\n        )}\n      </form>\n    </Box>\n  );\n}\n\nContactForm.propTypes = {\n  id: PropTypes.string, \n  nameItem: PropTypes.string,\n  numberItem: PropTypes.string,\n  onCloseModal: PropTypes.func,\n};\n\nContactForm.defaultProps = {\n  id: \"\", \n  nameItem: \"\", \n  numberItem: \"\",\n};","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport filterContact from \"../../redux/contacts/contacts-actions\";\n\nimport { Input, Text } from \"@chakra-ui/core\";\n\nconst Filter = () => {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  const handleFilter = (e) => dispatch(filterContact(e.target.value));\n\n  return (\n    <>\n      <Text textAlign=\"left\">Find contacts by name</Text>\n\n      <Input\n        mb={4}\n        type=\"text\"\n        value={value}\n        onChange={handleFilter}\n        placeholder=\"Search...\"\n      />\n    </>\n  );\n};\nexport default Filter;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport {\n  Button,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Avatar,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/core\";\n\nimport { useDisclosure } from \"@chakra-ui/core\";\n\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const initialRef = React.useRef();\n  const finalRef = React.useRef();\n\n  return (\n    <>\n      <Flex\n        py={2}\n        px={2}\n        borderRadius=\"md\"\n        bg=\"white.50\"\n        w=\"full\"\n        border=\"1px\"\n        borderColor=\"teal.500\"\n        my={1}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Flex>\n          <Avatar mr={4} />\n          <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n            <Heading fontSize={18} color=\"teal.900\">\n              {name}\n            </Heading>\n            <Text>\n              <a href={`tel:${number}`}> {number}</a>\n            </Text>\n          </Flex>\n        </Flex>\n\n        <Flex>\n          <Button\n            variantColor=\"teal\"\n            variant=\"outline\"\n            width=\"100px\"\n            type=\"button\"\n            onClick={onOpen}\n          >\n            Edit <Icon name=\"edit\" size=\"18px\" ml={3} />\n          </Button>\n\n          <Button\n            ml={3}\n            variantColor=\"teal\"\n            width=\"100px\"\n            type=\"button\"\n            onClick={onDeleteContact}\n          >\n            Delete <Icon name=\"delete\" size=\"18px\" ml={3} />\n          </Button>\n        </Flex>\n      </Flex>\n\n      <Modal\n        disableEnforceFocus={false}\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Edit your contact</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody px={6}>\n            <ContactForm\n              id={id}\n              nameItem={name}\n              numberItem={number}\n              onCloseModal={onClose}\n            />\n\n            <Button\n              onClick={onClose}\n              width=\"45%\"\n              position=\"absolute\"\n              top=\"270px\"\n              right=\"28px\"\n            >\n              Cancel\n            </Button>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from \"../../redux/contacts/operations\";\nimport { useAuth } from '../../hooks';\nimport ContactItem from \"../ContactItem/ContactItem\";\n\nimport {\n  ListItem,\n  List,\n} from \"@chakra-ui/core\";\n\nconst filterAllContacts = (contacts, filter) => {\n  return contacts?.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nconst ContactList = () => {\n  const {token} = useAuth();\n  const { data: contacts } = useFetchContactsQuery(token);\n\n  const filterAll = useSelector((state) => state.filter);\n  const items = filterAllContacts(contacts, filterAll);\n\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <List spacing={3} borderWidth=\"1px\" rounded=\"md\" overflow=\"hidden\">\n      {items?.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={() => deleteContact({ id, token })}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;","import React from \"react\";\n\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport ContactList from \"../../components/ContactList/ContactList\";\n\nimport { Box, Heading, Flex } from \"@chakra-ui/core\";\n\nexport default function ContactsPage() {\n  return (\n    <div>\n      <Flex\n        minHeight=\"100vh\"\n        width=\"full\"\n        align=\"start\"\n        justifyContent=\"space-around\"\n        py={12}\n      >\n        <Box\n          borderWidth={1}\n          px={4}\n          width=\"full\"\n          maxWidth=\"500px\"\n          borderRadius={4}\n          textAlign=\"center\"\n          boxShadow=\"lg\"\n        >\n          <Heading className=\"text-center\">Phonebook</Heading>\n          <ContactForm />\n        </Box>\n        <Box\n          px={4}\n          width=\"full\"\n          maxWidth=\"600px\"\n          borderRadius={4}\n          textAlign=\"center\"\n        >\n          <Heading>Contacts</Heading>\n          <Filter />\n          <ContactList />\n        </Box>\n      </Flex>\n    </div>\n  );\n}"],"names":["ContactForm","id","nameItem","numberItem","onCloseModal","useState","name","setName","number","setNumber","token","useAuth","contacts","useFetchContactsQuery","data","useCreateContactMutation","createContact","useEditContactMutation","editContact","toast","useToast","handleChange","e","target","value","console","warn","reset","Box","my","textAlign","onSubmit","preventDefault","contactName","theSameContact","some","contact","toLowerCase","includes","title","description","status","duration","isClosable","FormControl","FormLabel","Input","type","onChange","placeholder","pattern","required","mt","Button","variantColor","width","borderWidth","defaultProps","useSelector","state","filter","dispatch","useDispatch","Text","mb","filterContact","ContactItem","onDeleteContact","useDisclosure","isOpen","onOpen","onClose","initialRef","React","finalRef","Flex","py","px","borderRadius","bg","w","border","borderColor","justifyContent","alignItems","Avatar","mr","flexDirection","Heading","fontSize","color","href","variant","onClick","Icon","size","ml","Modal","disableEnforceFocus","initialFocusRef","finalFocusRef","position","top","right","items","filterAllContacts","useDeleteContactMutation","deleteContact","List","spacing","rounded","overflow","map","ContactsPage","minHeight","align","maxWidth","boxShadow","className"],"sourceRoot":""}